name: 'Attach Variable Set to HCP Terraform Workspace'
description: 'Looks up an HCP Terraform Variable Set by name and attaches it to a workspace'
inputs:
  tfc_hostname:
    description: 'HCP Terraform hostname (default: https://app.terraform.io)'
    required: false
    default: 'app.terraform.io'
  tfc_organization:
    description: 'HCP Terraform organization name'
    required: true
  tfc_workspace:
    description: 'HCP Terraform workspace name'
    required: true
  tfc_token:
    description: 'HCP Terraform API token'
    required: true
  var_set_name:
    description: 'Name of the variable set to associate with the workspace'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install jq
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y jq

    - name: Get Workspace ID
      id: get_workspace
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
      run: |
        response=$(curl -s \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          "https://${{ inputs.tfc_hostname }}/api/v2/organizations/${{ inputs.tfc_organization }}/workspaces/${{ inputs.tfc_workspace }}")

        echo "Response: $response"
        workspace_id=$(echo "$response" | jq -r '.data.id')

        if [[ "$workspace_id" == "null" ]]; then
          echo "Workspace not found"
          exit 1
        fi

        echo "workspace_id=$workspace_id" >> $GITHUB_OUTPUT

    - name: Find Variable Set ID by Name
      id: get_var_set
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
      run: |
        response=$(curl -s \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          "https://${{ inputs.tfc_hostname }}/api/v2/organizations/${{ inputs.tfc_organization }}/variable-sets")

        echo "Response: $response"
        var_set_id=$(echo "$response" | jq -r \
          --arg NAME "${{ inputs.var_set_name }}" \
          '.data[] | select(.attributes.name == $NAME) | .id')

        if [[ -z "$var_set_id" || "$var_set_id" == "null" ]]; then
          echo "Variable set '${{ inputs.var_set_name }}' not found"
          exit 1
        fi

        echo "var_set_id=$var_set_id" >> $GITHUB_OUTPUT

    - name: Attach Variable Set to Workspace
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
      run: |
        curl -s -X POST \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          --data '{
            "data": {
              "type": "variable-set-relationships",
              "relationships": {
                "workspace": {
                  "data": {
                    "id": "'${{ steps.get_workspace.outputs.workspace_id }}'",
                    "type": "workspaces"
                  }
                }
              }
            }
          }' \
          "https://${{ inputs.tfc_hostname }}/api/v2/variable-sets/${{ steps.get_var_set.outputs.var_set_id }}/relationships/workspaces"
