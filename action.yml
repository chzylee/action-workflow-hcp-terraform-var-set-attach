name: 'Attach Variable Set to HCP Terraform Workspace'
description: 'Looks up an HCP Terraform Variable Set by name and attaches it to a workspace by ID'

inputs:
  tfc_hostname:
    description: 'HCP Terraform hostname (default: https://app.terraform.io)'
    required: false
    default: 'app.terraform.io'
  tfc_organization:
    description: 'HCP Terraform organization name'
    required: true
  tfc_workspace_id:
    description: 'HCP Terraform workspace ID'
    required: true
  tfc_token:
    description: 'HCP Terraform API token'
    required: true
  var_set_name:
    description: 'Name of the variable set to associate with the workspace'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install jq
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y jq

    - name: Find Variable Set ID by Name
      id: get_var_set
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        TFC_ORGANIZATION: ${{ inputs.tfc_organization }}
        VAR_SET_NAME: ${{ inputs.var_set_name }}
      run: |
        # Correct URL to list variable sets by org (URL-encoded square brackets)
        VARIABLE_SETS_URL="https://$TFC_HOSTNAME/api/v2/organizations/$TFC_ORGANIZATION/varsets"

        echo "üì° Fetching variable sets for organization '$TFC_ORGANIZATION' from $VARIABLE_SETS_URL ..."
        response=$(curl -sS \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          "$VARIABLE_SETS_URL")

        echo "üîç Raw variable set response:"
        echo "$response"

        echo "üîç Looking for variable set '$VAR_SET_NAME'..."

        var_set_id=$(echo "$response" | jq -r \
          --arg NAME "$VAR_SET_NAME" \
          '.data[] | select(.attributes.name == $NAME) | .id')

        if [[ -z "$var_set_id" || "$var_set_id" == "null" ]]; then
          echo "‚ùå Variable set '$VAR_SET_NAME' not found."
          exit 1
        fi

        echo "‚úÖ Found variable set ID: $var_set_id"
        echo "var_set_id=$var_set_id" >> "$GITHUB_OUTPUT"

    - name: Attach Variable Set to Workspace
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        WORKSPACE_ID: ${{ inputs.tfc_workspace_id }}
        VAR_SET_ID: ${{ steps.get_var_set.outputs.var_set_id }}
      run: |
        ATTACH_URL="https://$TFC_HOSTNAME/api/v2/varsets/$VAR_SET_ID/relationships/workspaces"

        echo "üìé Attaching variable set '$VAR_SET_ID' to workspace '$WORKSPACE_ID' via $ATTACH_URL ..."

        payload=$(jq -n \
          --arg ws_id "$WORKSPACE_ID" \
          '{
            data: {
              type: "variable-set-relationships",
              relationships: {
                workspace: {
                  data: {
                    id: $ws_id,
                    type: "workspaces"
                  }
                }
              }
            }
          }')

        echo "üì§ Request payload:"
        echo "$payload"

        response=$(curl -sS -w "\nHTTP %{http_code}" -X POST \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          --data "$payload" \
          "$ATTACH_URL")

        echo "üîÅ Response from attach call:"
        echo "$response"

    - name: Verify Variable Set Attached to Workspace
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        WORKSPACE_ID: ${{ inputs.tfc_workspace_id }}
        VAR_SET_ID: ${{ steps.get_var_set.outputs.var_set_id }}
      run: |
        VERIFY_URL="https://$TFC_HOSTNAME/api/v2/varsets/$VAR_SET_ID/relationships/workspaces"

        echo "‚úÖ Verifying variable set '$VAR_SET_ID' is attached to workspace '$WORKSPACE_ID' using $VERIFY_URL ..."
        response=$(curl -sS \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          "$VERIFY_URL")

        echo "üîç Verification response:"
        echo "$response"

        attached=$(echo "$response" | jq -r \
          --arg ws_id "$WORKSPACE_ID" \
          '.data[]? | select(.id == $ws_id) | .id')

        if [[ "$attached" == "$WORKSPACE_ID" ]]; then
          echo "üéâ Variable set successfully attached to workspace."
        else
          echo "‚ùå Failed to verify variable set attachment."
          exit 1
        fi
