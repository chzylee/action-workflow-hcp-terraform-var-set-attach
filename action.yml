name: 'Attach Variable Set to HCP Terraform Workspace'
description: 'Looks up an HCP Terraform Variable Set by name and attaches it to a workspace by ID'

inputs:
  tfc_hostname:
    description: 'HCP Terraform hostname (default: https://app.terraform.io)'
    required: false
    default: 'app.terraform.io'
  tfc_organization:
    description: 'HCP Terraform organization name'
    required: true
  tfc_workspace_id:
    description: 'HCP Terraform workspace ID'
    required: true
  tfc_token:
    description: 'HCP Terraform API token'
    required: true
  var_set_name:
    description: 'Name of the variable set to associate with the workspace'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install jq
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y jq

    - name: Find Variable Set ID by Name
      id: get_var_set
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        TFC_ORGANIZATION: ${{ inputs.tfc_organization }}
        VAR_SET_NAME: ${{ inputs.var_set_name }}
      run: |
        VARIABLE_SETS_URL="https://$TFC_HOSTNAME/api/v2/organizations/$TFC_ORGANIZATION/varsets"
        echo "üì° Fetching variable sets for org '$TFC_ORGANIZATION'..."

        response=$(curl -sS \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          "$VARIABLE_SETS_URL")

        var_set_id=$(echo "$response" | jq -r \
          --arg NAME "$VAR_SET_NAME" \
          '.data[] | select(.attributes.name == $NAME) | .id')

        if [[ -z "$var_set_id" || "$var_set_id" == "null" ]]; then
          echo "‚ùå Variable set '$VAR_SET_NAME' not found."
          exit 1
        fi

        echo "::add-mask::$var_set_id"
        echo "‚úÖ Found variable set for '$VAR_SET_NAME'."
        echo "var_set_id=$var_set_id" >> "$GITHUB_OUTPUT"

    - name: Check if Variable Set Attached to Workspace
      id: check_if_attached
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        WORKSPACE_ID: ${{ inputs.tfc_workspace_id }}
        VAR_SET_ID: ${{ steps.get_var_set.outputs.var_set_id }}
      run: |
        VERIFY_URL="https://$TFC_HOSTNAME/api/v2/workspaces/$WORKSPACE_ID/varsets"
        echo "üîç Checking if variable set is already attached..."

        response=$(curl -sS \
          --header "Authorization: Bearer $TFC_TOKEN" \
          "$VERIFY_URL")

        attached=$(echo "$response" | jq -r \
          --arg varset_id "$VAR_SET_ID" \
          '.data[]? | select(.id == $varset_id) | .id')

        if [[ "$attached" == "$VAR_SET_ID" ]]; then
          echo "‚úÖ Variable set is already attached."
          echo "already_attached=true" >> "$GITHUB_OUTPUT"
        else
          echo "‚ÑπÔ∏è Variable set is not attached."
          echo "already_attached=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Attach Variable Set to Workspace
      if: steps.check_if_attached.outputs.already_attached != 'true'
      shell: bash
      env:
        TFC_TOKEN: ${{ inputs.tfc_token }}
        TFC_HOSTNAME: ${{ inputs.tfc_hostname }}
        WORKSPACE_ID: ${{ inputs.tfc_workspace_id }}
        VAR_SET_ID: ${{ steps.get_var_set.outputs.var_set_id }}
      run: |
        ATTACH_URL="https://$TFC_HOSTNAME/api/v2/varsets/$VAR_SET_ID/relationships/workspaces"
        echo "üìé Attaching variable set to workspace..."

        payload=$(jq -n --arg ws_id "$WORKSPACE_ID" '{
          data: [{ type: "workspaces", id: $ws_id }]
        }')

        full_response=$(curl -sS -w "\nHTTP_CODE:%{http_code}" -X POST \
          --header "Authorization: Bearer $TFC_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          --data "$payload" \
          "$ATTACH_URL")

        http_status=$(echo "$full_response" | sed -n 's/^HTTP_CODE://p')

        if [[ "$http_status" == "204" || "$http_status" == "200" ]]; then
          echo "‚úÖ Variable set successfully attached."
        else
          echo "‚ùå Failed to attach variable set. HTTP $http_status"
          exit 1
        fi
